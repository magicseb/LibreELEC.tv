From 47e4aeff276ee5a2e416039b6ea23b40a658c4be Mon Sep 17 00:00:00 2001
From: popcornmix <popcornmix@gmail.com>
Date: Tue, 10 Mar 2020 22:20:18 +0000
Subject: [PATCH 01/12] vc4_hdmi: Set INC_N_COUNT_BY_4_ON_HBR_MODEBIT

---
 drivers/gpu/drm/vc4/vc4_hdmi.c | 1 +
 drivers/gpu/drm/vc4/vc4_regs.h | 2 ++
 2 files changed, 3 insertions(+)

diff --git a/drivers/gpu/drm/vc4/vc4_hdmi.c b/drivers/gpu/drm/vc4/vc4_hdmi.c
index 044c34d3e37e..f7a77a2bb9d4 100644
--- a/drivers/gpu/drm/vc4/vc4_hdmi.c
+++ b/drivers/gpu/drm/vc4/vc4_hdmi.c
@@ -859,6 +859,7 @@ static void vc4_hdmi_set_n_cts(struct vc4_hdmi *vc4_hdmi)
 	cts = tmp;
 
 	HDMI_WRITE(HDMI_CRP_CFG,
+		   VC4_HDMI_CRP_CFG_INC_N_COUNT_BY_4_ON_HBR_MODE |
 		   VC4_HDMI_CRP_CFG_EXTERNAL_CTS_EN |
 		   VC4_SET_FIELD(n, VC4_HDMI_CRP_CFG_N));
 
diff --git a/drivers/gpu/drm/vc4/vc4_regs.h b/drivers/gpu/drm/vc4/vc4_regs.h
index 4d017572a5c2..5b662a6ad54a 100644
--- a/drivers/gpu/drm/vc4/vc4_regs.h
+++ b/drivers/gpu/drm/vc4/vc4_regs.h
@@ -527,6 +527,8 @@
 /* If set, generates CTS values based on N, audio clock, and video
  * clock.  N must be divisible by 128.
  */
+
+# define VC4_HDMI_CRP_CFG_INC_N_COUNT_BY_4_ON_HBR_MODE	BIT(27)
 # define VC4_HDMI_CRP_CFG_EXTERNAL_CTS_EN	BIT(24)
 # define VC4_HDMI_CRP_CFG_N_MASK		VC4_MASK(19, 0)
 # define VC4_HDMI_CRP_CFG_N_SHIFT		0
-- 
2.20.1


From e2c18766317821cfb3bbbc726c31d302b12482c4 Mon Sep 17 00:00:00 2001
From: Dom Cobley <popcornmix@gmail.com>
Date: Mon, 29 Jun 2020 15:40:02 +0100
Subject: [PATCH 02/12] vc4_hdmi: Set USE_MAI_BUS_SYNC_FOR_CTS_GENERATION

---
 drivers/gpu/drm/vc4/vc4_hdmi.c | 2 +-
 drivers/gpu/drm/vc4/vc4_regs.h | 1 +
 2 files changed, 2 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/vc4/vc4_hdmi.c b/drivers/gpu/drm/vc4/vc4_hdmi.c
index f7a77a2bb9d4..29dbf3b6e268 100644
--- a/drivers/gpu/drm/vc4/vc4_hdmi.c
+++ b/drivers/gpu/drm/vc4/vc4_hdmi.c
@@ -860,7 +860,7 @@ static void vc4_hdmi_set_n_cts(struct vc4_hdmi *vc4_hdmi)
 
 	HDMI_WRITE(HDMI_CRP_CFG,
 		   VC4_HDMI_CRP_CFG_INC_N_COUNT_BY_4_ON_HBR_MODE |
-		   VC4_HDMI_CRP_CFG_EXTERNAL_CTS_EN |
+		   VC4_HDMI_CRP_CFG_USE_MAI_BUS_SYNC_FOR_CTS_GENERATION |
 		   VC4_SET_FIELD(n, VC4_HDMI_CRP_CFG_N));
 
 	/*
diff --git a/drivers/gpu/drm/vc4/vc4_regs.h b/drivers/gpu/drm/vc4/vc4_regs.h
index 5b662a6ad54a..d13813c27b0b 100644
--- a/drivers/gpu/drm/vc4/vc4_regs.h
+++ b/drivers/gpu/drm/vc4/vc4_regs.h
@@ -529,6 +529,7 @@
  */
 
 # define VC4_HDMI_CRP_CFG_INC_N_COUNT_BY_4_ON_HBR_MODE	BIT(27)
+# define VC4_HDMI_CRP_CFG_USE_MAI_BUS_SYNC_FOR_CTS_GENERATION	BIT(26)
 # define VC4_HDMI_CRP_CFG_EXTERNAL_CTS_EN	BIT(24)
 # define VC4_HDMI_CRP_CFG_N_MASK		VC4_MASK(19, 0)
 # define VC4_HDMI_CRP_CFG_N_SHIFT		0
-- 
2.20.1


From 00758671d090ce447778a438e36af153308225c7 Mon Sep 17 00:00:00 2001
From: popcornmix <popcornmix@gmail.com>
Date: Tue, 10 Mar 2020 22:21:15 +0000
Subject: [PATCH 03/12] vc4_hdmi: Set HDMI_MAI_FMT

---
 drivers/gpu/drm/vc4/vc4_hdmi.c | 44 ++++++++++++++++++++++++++++++++++
 1 file changed, 44 insertions(+)

diff --git a/drivers/gpu/drm/vc4/vc4_hdmi.c b/drivers/gpu/drm/vc4/vc4_hdmi.c
index 29dbf3b6e268..e05909ee20cf 100644
--- a/drivers/gpu/drm/vc4/vc4_hdmi.c
+++ b/drivers/gpu/drm/vc4/vc4_hdmi.c
@@ -941,6 +941,45 @@ static void vc4_hdmi_audio_shutdown(struct snd_pcm_substream *substream,
 	vc4_hdmi->audio.substream = NULL;
 }
 
+static int sample_rate_to_mai_fmt(int samplerate)
+{
+   switch(samplerate)
+   {
+      case 8000:
+         return 1;
+      case 11025:
+         return 2;
+      case 12000:
+         return 3;
+      case 16000:
+         return 4;
+      case 22050:
+         return 5;
+      case 24000:
+         return 6;
+      case 32000:
+         return 7;
+      case 44100:
+         return 8;
+      case 48000:
+         return 9;
+      case 64000:
+         return 10;
+      case 88200:
+         return 11;
+      case 96000:
+         return 12;
+      case 128000:
+         return 13;
+      case 176400:
+         return 14;
+      case 192000:
+         return 15;
+      default:
+         return 0;
+   }
+}
+
 /* HDMI audio codec callbacks */
 static int vc4_hdmi_audio_hw_params(struct snd_pcm_substream *substream,
 				    struct snd_pcm_hw_params *params,
@@ -970,6 +1009,11 @@ static int vc4_hdmi_audio_hw_params(struct snd_pcm_substream *substream,
 
 	vc4_hdmi_audio_set_mai_clock(vc4_hdmi);
 
+	HDMI_WRITE(HDMI_MAI_FMT, 0 |
+		(0 /* 32-bit */ << 24) |
+		(2 /* PCM */ << 16) |
+		(sample_rate_to_mai_fmt(vc4_hdmi->audio.samplerate) << 8));
+
 	/* The B frame identifier should match the value used by alsa-lib (8) */
 	audio_packet_config =
 		VC4_HDMI_AUDIO_PACKET_ZERO_DATA_ON_SAMPLE_FLAT |
-- 
2.20.1


From bfd4a83d7950b3b16b9487a338626da1287dc696 Mon Sep 17 00:00:00 2001
From: Matthias Reichl <hias@horus.com>
Date: Tue, 17 Mar 2020 12:12:22 +0100
Subject: [PATCH 04/12] drm/vc4: add iec958 controls to vc4_hdmi

Although vc4 get an IEC958 formatted stream passed in from userspace
the driver needs the info from the channel status bits to properly
set up the hardware, eg for HBR passthrough.

Add iec958 controls so the channel status bits can be passed in
from userspace.

Signed-off-by: Matthias Reichl <hias@horus.com>
---
 drivers/gpu/drm/vc4/vc4_hdmi.c | 60 ++++++++++++++++++++++++++++++++++
 drivers/gpu/drm/vc4/vc4_hdmi.h |  2 ++
 2 files changed, 62 insertions(+)

diff --git a/drivers/gpu/drm/vc4/vc4_hdmi.c b/drivers/gpu/drm/vc4/vc4_hdmi.c
index e05909ee20cf..185ad9586c01 100644
--- a/drivers/gpu/drm/vc4/vc4_hdmi.c
+++ b/drivers/gpu/drm/vc4/vc4_hdmi.c
@@ -43,6 +43,7 @@
 #include <linux/pm_runtime.h>
 #include <linux/rational.h>
 #include <linux/reset.h>
+#include <sound/asoundef.h>
 #include <sound/dmaengine_pcm.h>
 #include <sound/pcm_drm_eld.h>
 #include <sound/pcm_params.h>
@@ -1127,6 +1128,47 @@ static int vc4_hdmi_audio_eld_ctl_get(struct snd_kcontrol *kcontrol,
 	return 0;
 }
 
+static int vc4_spdif_info(struct snd_kcontrol *kcontrol,
+			  struct snd_ctl_elem_info *uinfo)
+{
+	uinfo->type = SNDRV_CTL_ELEM_TYPE_IEC958;
+	uinfo->count = 1;
+	return 0;
+}
+
+static int vc4_spdif_playback_get(struct snd_kcontrol *kcontrol,
+				  struct snd_ctl_elem_value *ucontrol)
+{
+	struct snd_soc_component *component = snd_kcontrol_chip(kcontrol);
+	struct vc4_hdmi *vc4_hdmi = snd_component_to_hdmi(component);
+
+	memcpy(ucontrol->value.iec958.status, vc4_hdmi->audio.iec_status,
+		sizeof(vc4_hdmi->audio.iec_status));
+
+	return 0;
+}
+
+static int vc4_spdif_playback_put(struct snd_kcontrol *kcontrol,
+				  struct snd_ctl_elem_value *ucontrol)
+{
+	struct snd_soc_component *component = snd_kcontrol_chip(kcontrol);
+	struct vc4_hdmi *vc4_hdmi = snd_component_to_hdmi(component);
+
+	memcpy(vc4_hdmi->audio.iec_status, ucontrol->value.iec958.status,
+		sizeof(vc4_hdmi->audio.iec_status));
+
+	return 0;
+}
+
+static int vc4_spdif_mask_get(struct snd_kcontrol *kcontrol,
+			      struct snd_ctl_elem_value *ucontrol)
+{
+	memset(ucontrol->value.iec958.status, 0xff,
+		FIELD_SIZEOF(struct vc4_hdmi_audio, iec_status));
+
+	return 0;
+}
+
 static const struct snd_kcontrol_new vc4_hdmi_audio_controls[] = {
 	{
 		.access = SNDRV_CTL_ELEM_ACCESS_READ |
@@ -1136,6 +1178,19 @@ static const struct snd_kcontrol_new vc4_hdmi_audio_controls[] = {
 		.info = vc4_hdmi_audio_eld_ctl_info,
 		.get = vc4_hdmi_audio_eld_ctl_get,
 	},
+	{
+		.iface =   SNDRV_CTL_ELEM_IFACE_MIXER,
+		.name =    SNDRV_CTL_NAME_IEC958("", PLAYBACK, DEFAULT),
+		.info =    vc4_spdif_info,
+		.get =     vc4_spdif_playback_get,
+		.put =     vc4_spdif_playback_put,
+	},
+	{
+		.iface =   SNDRV_CTL_ELEM_IFACE_MIXER,
+		.name =    SNDRV_CTL_NAME_IEC958("", PLAYBACK, MASK),
+		.info =    vc4_spdif_info,
+		.get =     vc4_spdif_mask_get,
+	},
 };
 
 static const struct snd_soc_dapm_widget vc4_hdmi_audio_widgets[] = {
@@ -1256,6 +1311,11 @@ static int vc4_hdmi_audio_init(struct vc4_hdmi *vc4_hdmi)
 	vc4_hdmi->audio.dma_data.addr_width = DMA_SLAVE_BUSWIDTH_4_BYTES;
 	vc4_hdmi->audio.dma_data.maxburst = 2;
 
+	vc4_hdmi->audio.iec_status[0] = IEC958_AES0_CON_NOT_COPYRIGHT;
+	vc4_hdmi->audio.iec_status[1] =
+		IEC958_AES1_CON_ORIGINAL | IEC958_AES1_CON_PCM_CODER;
+	vc4_hdmi->audio.iec_status[3] = IEC958_AES3_CON_FS_48000;
+
 	ret = devm_snd_dmaengine_pcm_register(dev, &pcm_conf, 0);
 	if (ret) {
 		dev_err(dev, "Could not register PCM component: %d\n", ret);
diff --git a/drivers/gpu/drm/vc4/vc4_hdmi.h b/drivers/gpu/drm/vc4/vc4_hdmi.h
index 60f7bf99e06e..5914de41705c 100644
--- a/drivers/gpu/drm/vc4/vc4_hdmi.h
+++ b/drivers/gpu/drm/vc4/vc4_hdmi.h
@@ -115,6 +115,8 @@ struct vc4_hdmi_audio {
 	struct snd_pcm_substream *substream;
 
 	bool streaming;
+
+	unsigned char iec_status[4];
 };
 
 /* General HDMI hardware state. */
-- 
2.20.1


From 02071e59483575a4137d85bff77f6f887f69db88 Mon Sep 17 00:00:00 2001
From: Matthias Reichl <hias@horus.com>
Date: Thu, 19 Mar 2020 20:00:35 +0100
Subject: [PATCH 05/12] drm/vc4: move setup from hw_params to prepare

Configuring HDMI audio registers in prepare allows us to take
IEC958 bits into account which are set by the alsa hook after
the hw_params call.

Signed-off-by: Matthias Reichl <hias@horus.com>
---
 drivers/gpu/drm/vc4/vc4_hdmi.c | 17 +++++++++--------
 1 file changed, 9 insertions(+), 8 deletions(-)

diff --git a/drivers/gpu/drm/vc4/vc4_hdmi.c b/drivers/gpu/drm/vc4/vc4_hdmi.c
index 185ad9586c01..6510a8eba6dc 100644
--- a/drivers/gpu/drm/vc4/vc4_hdmi.c
+++ b/drivers/gpu/drm/vc4/vc4_hdmi.c
@@ -982,8 +982,7 @@ static int sample_rate_to_mai_fmt(int samplerate)
 }
 
 /* HDMI audio codec callbacks */
-static int vc4_hdmi_audio_hw_params(struct snd_pcm_substream *substream,
-				    struct snd_pcm_hw_params *params,
+static int vc4_hdmi_audio_prepare(struct snd_pcm_substream *substream,
 				    struct snd_soc_dai *dai)
 {
 	struct vc4_hdmi *vc4_hdmi = dai_to_hdmi(dai);
@@ -994,12 +993,14 @@ static int vc4_hdmi_audio_hw_params(struct snd_pcm_substream *substream,
 	if (substream != vc4_hdmi->audio.substream)
 		return -EINVAL;
 
-	dev_dbg(dev, "%s: %u Hz, %d bit, %d channels\n", __func__,
-		params_rate(params), params_width(params),
-		params_channels(params));
+	dev_dbg(dev, "%s: %u Hz, %d bit, %d channels AES0=%02x\n",
+		__func__,
+		substream->runtime->rate,
+		snd_pcm_format_width(substream->runtime->format),
+		substream->runtime->channels);
 
-	vc4_hdmi->audio.channels = params_channels(params);
-	vc4_hdmi->audio.samplerate = params_rate(params);
+	vc4_hdmi->audio.channels = substream->runtime->channels;
+	vc4_hdmi->audio.samplerate = substream->runtime->rate;
 
 	HDMI_WRITE(HDMI_MAI_CTL,
 		 VC4_HD_MAI_CTL_RESET |
@@ -1217,7 +1218,7 @@ static const struct snd_soc_component_driver vc4_hdmi_audio_component_drv = {
 static const struct snd_soc_dai_ops vc4_hdmi_audio_dai_ops = {
 	.startup = vc4_hdmi_audio_startup,
 	.shutdown = vc4_hdmi_audio_shutdown,
-	.hw_params = vc4_hdmi_audio_hw_params,
+	.prepare = vc4_hdmi_audio_prepare,
 	.set_fmt = vc4_hdmi_audio_set_fmt,
 	.trigger = vc4_hdmi_audio_trigger,
 };
-- 
2.20.1


From a74f3f235362d05e7c0d1c17811ded8c804a5809 Mon Sep 17 00:00:00 2001
From: Matthias Reichl <hias@horus.com>
Date: Thu, 19 Mar 2020 20:04:56 +0100
Subject: [PATCH 06/12] TEST drm/vc4: enable HBR MAI format on HBR streams

Signed-off-by: Matthias Reichl <hias@horus.com>
---
 drivers/gpu/drm/vc4/vc4_hdmi.c | 19 ++++++++++++++-----
 1 file changed, 14 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/vc4/vc4_hdmi.c b/drivers/gpu/drm/vc4/vc4_hdmi.c
index 6510a8eba6dc..6afbd49b26ae 100644
--- a/drivers/gpu/drm/vc4/vc4_hdmi.c
+++ b/drivers/gpu/drm/vc4/vc4_hdmi.c
@@ -989,6 +989,7 @@ static int vc4_hdmi_audio_prepare(struct snd_pcm_substream *substream,
 	struct device *dev = &vc4_hdmi->pdev->dev;
 	u32 audio_packet_config, channel_mask;
 	u32 channel_map;
+	u32 mai_fmt;
 
 	if (substream != vc4_hdmi->audio.substream)
 		return -EINVAL;
@@ -997,7 +998,8 @@ static int vc4_hdmi_audio_prepare(struct snd_pcm_substream *substream,
 		__func__,
 		substream->runtime->rate,
 		snd_pcm_format_width(substream->runtime->format),
-		substream->runtime->channels);
+		substream->runtime->channels,
+		vc4_hdmi->audio.iec_status[0]);
 
 	vc4_hdmi->audio.channels = substream->runtime->channels;
 	vc4_hdmi->audio.samplerate = substream->runtime->rate;
@@ -1011,10 +1013,17 @@ static int vc4_hdmi_audio_prepare(struct snd_pcm_substream *substream,
 
 	vc4_hdmi_audio_set_mai_clock(vc4_hdmi);
 
-	HDMI_WRITE(HDMI_MAI_FMT, 0 |
-		(0 /* 32-bit */ << 24) |
-		(2 /* PCM */ << 16) |
-		(sample_rate_to_mai_fmt(vc4_hdmi->audio.samplerate) << 8));
+	if (vc4_hdmi->audio.iec_status[0] & IEC958_AES0_NONAUDIO &&
+		vc4_hdmi->audio.channels == 8)
+		mai_fmt = 200 << 16; /* HBR mode */
+	else
+		mai_fmt = 2 << 16; /* PCM mode */
+
+	mai_fmt |= sample_rate_to_mai_fmt(vc4_hdmi->audio.samplerate) << 8;
+
+	dev_dbg(dev, "%s: mai_fmt = 0x%08x\n", __func__, mai_fmt);
+
+	HDMI_WRITE(HDMI_MAI_FMT, mai_fmt);
 
 	/* The B frame identifier should match the value used by alsa-lib (8) */
 	audio_packet_config =
-- 
2.20.1


From c01aed7d95d8de58b462d2af15a29d3e8db61f30 Mon Sep 17 00:00:00 2001
From: Dom Cobley <popcornmix@gmail.com>
Date: Thu, 25 Jun 2020 17:53:19 +0100
Subject: [PATCH 07/12] Debug logging

---
 drivers/gpu/drm/vc4/vc4_hdmi.c | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/vc4/vc4_hdmi.c b/drivers/gpu/drm/vc4/vc4_hdmi.c
index 6afbd49b26ae..940be41a45b9 100644
--- a/drivers/gpu/drm/vc4/vc4_hdmi.c
+++ b/drivers/gpu/drm/vc4/vc4_hdmi.c
@@ -1,3 +1,5 @@
+#define DEBUG
+
 // SPDX-License-Identifier: GPL-2.0-only
 /*
  * Copyright (C) 2015 Broadcom
@@ -994,12 +996,12 @@ static int vc4_hdmi_audio_prepare(struct snd_pcm_substream *substream,
 	if (substream != vc4_hdmi->audio.substream)
 		return -EINVAL;
 
-	dev_dbg(dev, "%s: %u Hz, %d bit, %d channels AES0=%02x\n",
+	dev_dbg(dev, "%s: %u Hz, %d bit, %d channels AES0=%02x %02x %02x %02x\n",
 		__func__,
 		substream->runtime->rate,
 		snd_pcm_format_width(substream->runtime->format),
 		substream->runtime->channels,
-		vc4_hdmi->audio.iec_status[0]);
+		vc4_hdmi->audio.iec_status[0], vc4_hdmi->audio.iec_status[1], vc4_hdmi->audio.iec_status[2], vc4_hdmi->audio.iec_status[3]);
 
 	vc4_hdmi->audio.channels = substream->runtime->channels;
 	vc4_hdmi->audio.samplerate = substream->runtime->rate;
@@ -1021,7 +1023,7 @@ static int vc4_hdmi_audio_prepare(struct snd_pcm_substream *substream,
 
 	mai_fmt |= sample_rate_to_mai_fmt(vc4_hdmi->audio.samplerate) << 8;
 
-	dev_dbg(dev, "%s: mai_fmt = 0x%08x\n", __func__, mai_fmt);
+	dev_dbg(dev, "%s: mai_fmt = 0x%08x samplerate=%d channels=%d\n", __func__, mai_fmt, vc4_hdmi->audio.samplerate, vc4_hdmi->audio.channels);
 
 	HDMI_WRITE(HDMI_MAI_FMT, mai_fmt);
 
-- 
2.20.1


From c02e6d486dd63dc3ed47df558117693dc0d85514 Mon Sep 17 00:00:00 2001
From: Dom Cobley <popcornmix@gmail.com>
Date: Thu, 25 Jun 2020 17:57:04 +0100
Subject: [PATCH 08/12] vc4_hdmi: Don't mangle channels for passthrough

---
 drivers/gpu/drm/vc4/vc4_hdmi.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/vc4/vc4_hdmi.c b/drivers/gpu/drm/vc4/vc4_hdmi.c
index 940be41a45b9..13c3c1ca0f0c 100644
--- a/drivers/gpu/drm/vc4/vc4_hdmi.c
+++ b/drivers/gpu/drm/vc4/vc4_hdmi.c
@@ -819,7 +819,9 @@ static u32 vc5_hdmi_channel_map(struct vc4_hdmi *vc4_hdmi, u32 channel_mask)
 	u32 channel_map = 0;
 
 	/* hack: return the mapping expected by kodi until we have a way of configuring this */
-	if (channel_mask == 0xff)
+
+	if (!(vc4_hdmi->audio.iec_status[0] & IEC958_AES0_NONAUDIO) &&
+		vc4_hdmi->audio.channels == 8)
 		return 0x54237610;
 
 	for (i = 0; i < 8; i++) {
-- 
2.20.1


From 09cc5d0abccc3efee9fe5402eef2801ab202206a Mon Sep 17 00:00:00 2001
From: Dom Cobley <popcornmix@gmail.com>
Date: Thu, 25 Jun 2020 18:48:40 +0100
Subject: [PATCH 09/12] vc4_hdmi: Remove firmware logic for MAI threshold
 setting

Workaround for bugs in hardware on earlier Pi models. Shouldn't be needed on Pi4

Signed-off-by: Dom Cobley <popcornmix@gmail.com>
---
 drivers/gpu/drm/vc4/vc4_hdmi.c | 21 +++++----------------
 1 file changed, 5 insertions(+), 16 deletions(-)

diff --git a/drivers/gpu/drm/vc4/vc4_hdmi.c b/drivers/gpu/drm/vc4/vc4_hdmi.c
index 13c3c1ca0f0c..455d2dd05b76 100644
--- a/drivers/gpu/drm/vc4/vc4_hdmi.c
+++ b/drivers/gpu/drm/vc4/vc4_hdmi.c
@@ -1039,22 +1039,11 @@ static int vc4_hdmi_audio_prepare(struct snd_pcm_substream *substream,
 	audio_packet_config |= VC4_SET_FIELD(channel_mask,
 					     VC4_HDMI_AUDIO_PACKET_CEA_MASK);
 
-	/* Set the MAI threshold.  This logic mimics the firmware's. */
-	if (vc4_hdmi->audio.samplerate > 96000) {
-		HDMI_WRITE(HDMI_MAI_THR,
-			 VC4_SET_FIELD(0x12, VC4_HD_MAI_THR_DREQHIGH) |
-			 VC4_SET_FIELD(0x12, VC4_HD_MAI_THR_DREQLOW));
-	} else if (vc4_hdmi->audio.samplerate > 48000) {
-		HDMI_WRITE(HDMI_MAI_THR,
-			 VC4_SET_FIELD(0x14, VC4_HD_MAI_THR_DREQHIGH) |
-			 VC4_SET_FIELD(0x12, VC4_HD_MAI_THR_DREQLOW));
-	} else {
-		HDMI_WRITE(HDMI_MAI_THR,
-			 VC4_SET_FIELD(0x10, VC4_HD_MAI_THR_PANICHIGH) |
-			 VC4_SET_FIELD(0x10, VC4_HD_MAI_THR_PANICLOW) |
-			 VC4_SET_FIELD(0x10, VC4_HD_MAI_THR_DREQHIGH) |
-			 VC4_SET_FIELD(0x10, VC4_HD_MAI_THR_DREQLOW));
-	}
+	HDMI_WRITE(HDMI_MAI_THR,
+		 VC4_SET_FIELD(0x10, VC4_HD_MAI_THR_PANICHIGH) |
+		 VC4_SET_FIELD(0x10, VC4_HD_MAI_THR_PANICLOW) |
+		 VC4_SET_FIELD(0x10, VC4_HD_MAI_THR_DREQHIGH) |
+		 VC4_SET_FIELD(0x10, VC4_HD_MAI_THR_DREQLOW));
 
 	HDMI_WRITE(HDMI_MAI_CONFIG,
 		   VC4_HDMI_MAI_CONFIG_BIT_REVERSE |
-- 
2.20.1


From 0b7111e93eb7ee95685054aad3287bd3d23a6c5d Mon Sep 17 00:00:00 2001
From: popcornmix <popcornmix@gmail.com>
Date: Mon, 23 Mar 2020 16:46:20 +0000
Subject: [PATCH 10/12] hack: dma: disable BCM2835_DMA_WAIT_RESP

---
 drivers/dma/bcm2835-dma.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/dma/bcm2835-dma.c b/drivers/dma/bcm2835-dma.c
index 53346d7eb66c..f0ed2d87d426 100644
--- a/drivers/dma/bcm2835-dma.c
+++ b/drivers/dma/bcm2835-dma.c
@@ -149,7 +149,7 @@ struct bcm2835_desc {
 /* Transfer information bits - also bcm2835_cb.info field */
 #define BCM2835_DMA_INT_EN	BIT(0)
 #define BCM2835_DMA_TDMODE	BIT(1) /* 2D-Mode */
-#define BCM2835_DMA_WAIT_RESP	BIT(3) /* wait for AXI-write to be acked */
+#define BCM2835_DMA_WAIT_RESP	0 //BIT(3) /* wait for AXI-write to be acked */
 #define BCM2835_DMA_D_INC	BIT(4)
 #define BCM2835_DMA_D_WIDTH	BIT(5) /* 128bit writes if set */
 #define BCM2835_DMA_D_DREQ	BIT(6) /* enable DREQ for destination */
-- 
2.20.1


From 2ed0b7b9fa94c10f9e6c3d23fd80434ebc1bf012 Mon Sep 17 00:00:00 2001
From: Dom Cobley <popcornmix@gmail.com>
Date: Mon, 29 Jun 2020 17:33:46 +0100
Subject: [PATCH 11/12] Revert "vc4_hdmi: Set
 USE_MAI_BUS_SYNC_FOR_CTS_GENERATION"

This reverts commit e2c18766317821cfb3bbbc726c31d302b12482c4.
---
 drivers/gpu/drm/vc4/vc4_hdmi.c | 2 +-
 drivers/gpu/drm/vc4/vc4_regs.h | 1 -
 2 files changed, 1 insertion(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/vc4/vc4_hdmi.c b/drivers/gpu/drm/vc4/vc4_hdmi.c
index 455d2dd05b76..662d6be078ed 100644
--- a/drivers/gpu/drm/vc4/vc4_hdmi.c
+++ b/drivers/gpu/drm/vc4/vc4_hdmi.c
@@ -865,7 +865,7 @@ static void vc4_hdmi_set_n_cts(struct vc4_hdmi *vc4_hdmi)
 
 	HDMI_WRITE(HDMI_CRP_CFG,
 		   VC4_HDMI_CRP_CFG_INC_N_COUNT_BY_4_ON_HBR_MODE |
-		   VC4_HDMI_CRP_CFG_USE_MAI_BUS_SYNC_FOR_CTS_GENERATION |
+		   VC4_HDMI_CRP_CFG_EXTERNAL_CTS_EN |
 		   VC4_SET_FIELD(n, VC4_HDMI_CRP_CFG_N));
 
 	/*
diff --git a/drivers/gpu/drm/vc4/vc4_regs.h b/drivers/gpu/drm/vc4/vc4_regs.h
index d13813c27b0b..5b662a6ad54a 100644
--- a/drivers/gpu/drm/vc4/vc4_regs.h
+++ b/drivers/gpu/drm/vc4/vc4_regs.h
@@ -529,7 +529,6 @@
  */
 
 # define VC4_HDMI_CRP_CFG_INC_N_COUNT_BY_4_ON_HBR_MODE	BIT(27)
-# define VC4_HDMI_CRP_CFG_USE_MAI_BUS_SYNC_FOR_CTS_GENERATION	BIT(26)
 # define VC4_HDMI_CRP_CFG_EXTERNAL_CTS_EN	BIT(24)
 # define VC4_HDMI_CRP_CFG_N_MASK		VC4_MASK(19, 0)
 # define VC4_HDMI_CRP_CFG_N_SHIFT		0
-- 
2.20.1


From 70409cc5731dea2867f3b8c3889924591ce9d0e1 Mon Sep 17 00:00:00 2001
From: Dom Cobley <popcornmix@gmail.com>
Date: Tue, 30 Jun 2020 11:23:49 +0100
Subject: [PATCH 12/12] vc_hdmi: Set VC4_HDMI_MAI_CONFIG_FORMAT_REVERSE

Without this bit set, HDMI_MAI_FORMAT doesn't pick up
the format and samplerate from DVP_CFG_MAI0_FMTand you
can't get HDMI_HDMI_13_AUDIO_STATUS_1 to indicate HBR mode

Signed-off-by: Dom Cobley <popcornmix@gmail.com>
---
 drivers/gpu/drm/vc4/vc4_hdmi.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/drivers/gpu/drm/vc4/vc4_hdmi.c b/drivers/gpu/drm/vc4/vc4_hdmi.c
index 662d6be078ed..8556ea1ee7f2 100644
--- a/drivers/gpu/drm/vc4/vc4_hdmi.c
+++ b/drivers/gpu/drm/vc4/vc4_hdmi.c
@@ -1047,6 +1047,7 @@ static int vc4_hdmi_audio_prepare(struct snd_pcm_substream *substream,
 
 	HDMI_WRITE(HDMI_MAI_CONFIG,
 		   VC4_HDMI_MAI_CONFIG_BIT_REVERSE |
+		   VC4_HDMI_MAI_CONFIG_FORMAT_REVERSE |
 		   VC4_SET_FIELD(channel_mask, VC4_HDMI_MAI_CHANNEL_MASK));
 
 	channel_map = vc4_hdmi->variant->channel_map(vc4_hdmi, channel_mask);
-- 
2.20.1

